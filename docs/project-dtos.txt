
// ---------------------- Auth ---------------------- //
// ChangePasswordDto
	public class ChangePasswordDto
    {
        [Required]
        public string OldPassword { get; set; }

        [Required]
        [MinLength(6)]
        public string NewPassword { get; set; }
    }
	
// LoginDto
	public class LoginDto
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        [MinLength(6)]
        public string Password { get; set; }
    }
	
// RefreshTokenDto
	public class RefreshTokenDto
    {
        [Required]
        public string RefreshToken { get; set; }
    }
	
// RegisterDto
	public class RegisterDto
    {
        [Required(ErrorMessage = "Email là bắt buộc")]
        [EmailAddress(ErrorMessage = "Email không hợp lệ")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Mật khẩu là bắt buộc")]
        [MinLength(6, ErrorMessage = "Mật khẩu phải có ít nhất 6 ký tự")]
        public string Password { get; set; }

        [Required(ErrorMessage = "Vai trò là bắt buộc")]
        [RegularExpression("^(User|Owner)$", ErrorMessage = "Vai trò không hợp lệ")]
        public string Role { get; set; }

        [Required(ErrorMessage = "Họ tên là bắt buộc")]
        [StringLength(100, ErrorMessage = "Họ tên không được vượt quá 100 ký tự")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "Số điện thoại là bắt buộc")]
        [RegularExpression(@"^[0-9]{10}$", ErrorMessage = "Số điện thoại không hợp lệ")]
        public string Phone { get; set; }
    }
	
// ResetPasswordDto
	public class ResetPasswordDto
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; }

        [Required]
        public string Token { get; set; }

        [Required]
        [MinLength(6)]
        public string NewPassword { get; set; }
    }
	
// ---------------------- Field ---------------------- //
// CreateFieldDto
	public class CreateFieldDto
    {
        [Required(ErrorMessage = "Tên sân không được để trống")]
        [StringLength(100, ErrorMessage = "Tên sân không được vượt quá 100 ký tự")]
        public string FieldName { get; set; }

        [Required(ErrorMessage = "Địa chỉ không được để trống")]
        [StringLength(255, ErrorMessage = "Địa chỉ không được vượt quá 255 ký tự")]
        public string Address { get; set; }

        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [Phone(ErrorMessage = "Số điện thoại không hợp lệ")]
        [StringLength(10, ErrorMessage = "Số điện thoại không được vượt quá 10 ký tự")]
        public string Phone { get; set; }

        [Required(ErrorMessage = "Giờ mở cửa không được để trống")]
        [StringLength(100, ErrorMessage = "Giờ mở cửa không được vượt quá 100 ký tự")]
        public string OpenHours { get; set; }

        [StringLength(500, ErrorMessage = "Mô tả không được vượt quá 500 ký tự")]
        public string Description { get; set; }

        [Required(ErrorMessage = "Loại thể thao không được để trống")]
        public int SportId { get; set; }

        [Required(ErrorMessage = "Vĩ độ không được để trống")]
        [Range(-90, 90, ErrorMessage = "Vĩ độ không hợp lệ")]
        public decimal Latitude { get; set; }

        [Required(ErrorMessage = "Kinh độ không được để trống")]
        [Range(-180, 180, ErrorMessage = "Kinh độ không hợp lệ")]
        public decimal Longitude { get; set; }

        [Required(ErrorMessage = "Trạng thái không được để trống")]
        [RegularExpression("^(Active|Inactive|Maintenance)$", ErrorMessage = "Trạng thái không hợp lệ")]
        public string Status { get; set; }

        public List<int> AmenityIds { get; set; }
        public List<CreateFieldServiceDto> Services { get; set; }
        public List<CreateFieldPricingDto> Pricing { get; set; }
    }

    public class CreateFieldServiceDto
    {
        [Required(ErrorMessage = "Tên dịch vụ không được để trống")]
        [StringLength(100, ErrorMessage = "Tên dịch vụ không được vượt quá 100 ký tự")]
        public string ServiceName { get; set; }

        [StringLength(200, ErrorMessage = "Mô tả không được vượt quá 200 ký tự")]
        public string Description { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 10000000, ErrorMessage = "Giá không hợp lệ")]
        public decimal Price { get; set; }
    }

    public class CreateFieldPricingDto
    {
        [Required(ErrorMessage = "Thời gian bắt đầu không được để trống")]
        public TimeSpan StartTime { get; set; }

        [Required(ErrorMessage = "Thời gian kết thúc không được để trống")]
        public TimeSpan EndTime { get; set; }

        [Required(ErrorMessage = "Ngày trong tuần không được để trống")]
        [Range(0, 6, ErrorMessage = "Ngày trong tuần không hợp lệ")]
        public int DayOfWeek { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 10000000, ErrorMessage = "Giá không hợp lệ")]
        public decimal Price { get; set; }
    }


// CreateFieldReviewDto
	public class CreateFieldReviewDto
    {
        [Required(ErrorMessage = "Đánh giá không được để trống")]
        [Range(1, 5, ErrorMessage = "Đánh giá phải từ 1 đến 5 sao")]
        public int Rating { get; set; }

        [Required(ErrorMessage = "Nội dung đánh giá không được để trống")]
        [StringLength(500, ErrorMessage = "Nội dung đánh giá không được vượt quá 500 ký tự")]
        public string Comment { get; set; }
    }
	
// FieldAmenityDto
	public class FieldAmenityDto
    {
        public int AmenityId { get; set; }

        [Required(ErrorMessage = "Tên tiện ích không được để trống")]
        [StringLength(100, ErrorMessage = "Tên tiện ích không được vượt quá 100 ký tự")]
        public string AmenityName { get; set; }
    }
	
// FieldDto
	public class FieldDto
    {
        public int FieldId { get; set; }

        [Required(ErrorMessage = "Tên sân không được để trống")]
        [StringLength(100, ErrorMessage = "Tên sân không được vượt quá 100 ký tự")]
        public string FieldName { get; set; }

        [Required(ErrorMessage = "Địa chỉ không được để trống")]
        [StringLength(255, ErrorMessage = "Địa chỉ không được vượt quá 255 ký tự")]
        public string Address { get; set; }

        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [Phone(ErrorMessage = "Số điện thoại không hợp lệ")]
        [StringLength(10, ErrorMessage = "Số điện thoại không được vượt quá 10 ký tự")]
        public string Phone { get; set; }

        [Required(ErrorMessage = "Giờ mở cửa không được để trống")]
        [StringLength(100, ErrorMessage = "Giờ mở cửa không được vượt quá 100 ký tự")]
        public string OpenHours { get; set; }

        [StringLength(500, ErrorMessage = "Mô tả không được vượt quá 500 ký tự")]
        public string Description { get; set; }

        [Required(ErrorMessage = "Trạng thái không được để trống")]
        [RegularExpression("^(Active|Inactive|Maintenance)$", ErrorMessage = "Trạng thái không hợp lệ")]
        public string Status { get; set; }

        [Required(ErrorMessage = "Loại thể thao không được để trống")]
        public int SportId { get; set; }

        [Required(ErrorMessage = "Tên loại thể thao không được để trống")]
        public string SportName { get; set; }

        [Required(ErrorMessage = "Vĩ độ không được để trống")]
        [Range(-90, 90, ErrorMessage = "Vĩ độ không hợp lệ")]
        public decimal Latitude { get; set; }

        [Required(ErrorMessage = "Kinh độ không được để trống")]
        [Range(-180, 180, ErrorMessage = "Kinh độ không hợp lệ")]
        public decimal Longitude { get; set; }

        public List<string> Images { get; set; }
        public List<FieldAmenityDto> Amenities { get; set; }
        public List<FieldServiceDto> Services { get; set; }
        public List<FieldPricingDto> Pricing { get; set; }
    }
	
// FieldFilterDto
	public class FieldFilterDto
    {
        public int? SportId { get; set; }

        [StringLength(255, ErrorMessage = "Địa điểm không được vượt quá 255 ký tự")]
        public string? Location { get; set; }

        [RegularExpression("^(Active|Inactive|Maintenance)$", ErrorMessage = "Trạng thái không hợp lệ")]
        public string? Status { get; set; }

        [Range(0, 9999999.99, ErrorMessage = "Giá tối thiểu không được vượt quá 9,999,999.99")]
        public decimal? MinPrice { get; set; }

        [Range(0, 9999999.99, ErrorMessage = "Giá tối đa không được vượt quá 9,999,999.99")]
        public decimal? MaxPrice { get; set; }

        [RegularExpression(@"^(FieldName|Location|Rating|Price):(asc|desc)$", ErrorMessage = "Sắp xếp không hợp lệ")]
        public string? Sort { get; set; }

        [Range(1, int.MaxValue, ErrorMessage = "Số trang phải lớn hơn 0")]
        public int Page { get; set; } = 1;

        [Range(1, 100, ErrorMessage = "Số lượng mỗi trang phải từ 1 đến 100")]
        public int PageSize { get; set; } = 10;
    }
	
// FieldPricingDto
	public class FieldPricingDto
    {
        [Required(ErrorMessage = "Thời gian bắt đầu không được để trống")]
        public TimeSpan StartTime { get; set; }

        [Required(ErrorMessage = "Thời gian kết thúc không được để trống")]
        public TimeSpan EndTime { get; set; }

        [Required(ErrorMessage = "Ngày trong tuần không được để trống")]
        [Range(0, 6, ErrorMessage = "Ngày trong tuần không hợp lệ")]
        public int DayOfWeek { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 9999999.99, ErrorMessage = "Giá phải từ 0 đến 9,999,999.99")]
        public decimal Price { get; set; }
    }
	
// FieldReportDto
	public class FieldReportDto
    {
        [Required(ErrorMessage = "Lý do báo cáo không được để trống")]
        [StringLength(50, ErrorMessage = "Lý do báo cáo không được vượt quá 50 ký tự")]
        public string Reason { get; set; }

        [Required(ErrorMessage = "Mô tả không được để trống")]
        [StringLength(500, ErrorMessage = "Mô tả không được vượt quá 500 ký tự")]
        public string Description { get; set; }
    }
	
// FieldReviewDto
	public class FieldReviewDto
    {
        public int ReviewId { get; set; }
        public int UserId { get; set; }

        [Required(ErrorMessage = "Tên người dùng không được để trống")]
        public string UserName { get; set; }

        [Required(ErrorMessage = "Đánh giá không được để trống")]
        [Range(1, 5, ErrorMessage = "Đánh giá phải từ 1 đến 5 sao")]
        public int Rating { get; set; }

        [Required(ErrorMessage = "Nội dung đánh giá không được để trống")]
        [StringLength(500, ErrorMessage = "Nội dung đánh giá không được vượt quá 500 ký tự")]
        public string Comment { get; set; }

        public DateTime CreatedAt { get; set; }

        [Url(ErrorMessage = "URL avatar không hợp lệ")]
        public string UserAvatar { get; set; }
    }
	
// FieldSearchDto
	public class FieldSearchDto
    {
        [StringLength(200, ErrorMessage = "Từ khóa tìm kiếm không được vượt quá 200 ký tự")]
        public string SearchTerm { get; set; }

        [StringLength(255, ErrorMessage = "Địa điểm không được vượt quá 255 ký tự")]
        public string Location { get; set; }
        public int? SportId { get; set; }
        [DataType(DataType.DateTime, ErrorMessage = "Thời gian không hợp lệ")]
        public DateTime? Time { get; set; }
        [Range(-90, 90, ErrorMessage = "Vĩ độ không hợp lệ")]
        public decimal? Latitude { get; set; }
        [Range(-180, 180, ErrorMessage = "Kinh độ không hợp lệ")]
        public decimal? Longitude { get; set; }
        [Range(0, 100, ErrorMessage = "Bán kính tìm kiếm phải từ 0 đến 100 km")]
        public decimal? Radius { get; set; }
        [Range(0, 9999999.99, ErrorMessage = "Giá tối thiểu không được vượt quá 9,999,999.99")]
        public decimal? MinPrice { get; set; }

        [Range(0, 9999999.99, ErrorMessage = "Giá tối đa không được vượt quá 9,999,999.99")]
        public decimal? MaxPrice { get; set; }
        [RegularExpression(@"^(Distance|Rating|Price):(asc|desc)$", ErrorMessage = "Sắp xếp không hợp lệ")]
        public string Sort { get; set; }
        [Range(1, int.MaxValue, ErrorMessage = "Số trang phải lớn hơn 0")]
        public int Page { get; set; } = 1;
        [Range(1, 50, ErrorMessage = "Số lượng mỗi trang phải từ 1 đến 50")]
        public int PageSize { get; set; } = 10;
    }
	
// FieldServiceDto
	public class FieldServiceDto
    {
        public int ServiceId { get; set; }

        [Required(ErrorMessage = "Tên dịch vụ không được để trống")]
        [StringLength(100, ErrorMessage = "Tên dịch vụ không được vượt quá 100 ký tự")]
        public string ServiceName { get; set; }
        
        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 10000000, ErrorMessage = "Giá không hợp lệ")]
        public decimal Price { get; set; }
    }
	
// TimeSlotDto
    public class TimeSlotDto
    {
        [Required(ErrorMessage = "Thời gian bắt đầu không được để trống")]
        public DateTime StartTime { get; set; }

        [Required(ErrorMessage = "Thời gian kết thúc không được để trống")]
        public DateTime EndTime { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 9999999.99, ErrorMessage = "Giá phải từ 0 đến 9,999,999.99")]
        public decimal Price { get; set; }

        [Required(ErrorMessage = "Trạng thái khả dụng không được để trống")]
        public bool IsAvailable { get; set; }
    } 

// UpdateFieldDto
	public class UpdateFieldDto
    {
        [Required(ErrorMessage = "Tên sân không được để trống")]
        [StringLength(100, ErrorMessage = "Tên sân không được vượt quá 100 ký tự")]
        public string FieldName { get; set; }

        [Required(ErrorMessage = "Địa chỉ không được để trống")]
        [StringLength(255, ErrorMessage = "Địa chỉ không được vượt quá 255 ký tự")]
        public string Address { get; set; }

        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [Phone(ErrorMessage = "Số điện thoại không hợp lệ")]
        [StringLength(10, ErrorMessage = "Số điện thoại không được vượt quá 10 ký tự")]
        public string Phone { get; set; }

        [Required(ErrorMessage = "Giờ mở cửa không được để trống")]
        [StringLength(100, ErrorMessage = "Giờ mở cửa không được vượt quá 100 ký tự")]
        public string OpenHours { get; set; }

        [StringLength(500, ErrorMessage = "Mô tả không được vượt quá 500 ký tự")]
        public string Description { get; set; }

        [Required(ErrorMessage = "Trạng thái không được để trống")]
        [RegularExpression("^(Active|Inactive|Maintenance)$", ErrorMessage = "Trạng thái không hợp lệ")]
        public string Status { get; set; }

        [Required(ErrorMessage = "Vĩ độ không được để trống")]
        [Range(-90, 90, ErrorMessage = "Vĩ độ không hợp lệ")]
        public decimal Latitude { get; set; }

        [Required(ErrorMessage = "Kinh độ không được để trống")]
        [Range(-180, 180, ErrorMessage = "Kinh độ không hợp lệ")]
        public decimal Longitude { get; set; }

        public List<int> AmenityIds { get; set; }
        public List<UpdateFieldServiceDto> Services { get; set; }
        public List<UpdateFieldPricingDto> Pricing { get; set; }
    }

    public class UpdateFieldServiceDto
    {
        public int? ServiceId { get; set; }

        [Required(ErrorMessage = "Tên dịch vụ không được để trống")]
        [StringLength(100, ErrorMessage = "Tên dịch vụ không được vượt quá 100 ký tự")]
        public string ServiceName { get; set; }

        [StringLength(200, ErrorMessage = "Mô tả không được vượt quá 200 ký tự")]
        public string Description { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 10000000, ErrorMessage = "Giá không hợp lệ")]
        public decimal Price { get; set; }
    }

    public class UpdateFieldPricingDto
    {
        public int? PricingId { get; set; }

        [Required(ErrorMessage = "Thời gian bắt đầu không được để trống")]
        public TimeSpan StartTime { get; set; }

        [Required(ErrorMessage = "Thời gian kết thúc không được để trống")]
        public TimeSpan EndTime { get; set; }

        [Required(ErrorMessage = "Ngày trong tuần không được để trống")]
        [Range(0, 6, ErrorMessage = "Ngày trong tuần không hợp lệ")]
        public int DayOfWeek { get; set; }

        [Required(ErrorMessage = "Giá không được để trống")]
        [Range(0, 10000000, ErrorMessage = "Giá không hợp lệ")]
        public decimal Price { get; set; }
    }
	
// ---------------------- User ---------------------- //
// BookingResponseDto
	public class BookingResponseDto
    {
        public int BookingId { get; set; }
        public int FieldId { get; set; }
        public string FieldName { get; set; }
        public string BookingDate { get; set; }
        public string StartTime { get; set; }
        public string EndTime { get; set; }
        public decimal TotalPrice { get; set; }
        public string Status { get; set; }
        public string PaymentStatus { get; set; }
        public string CreatedAt { get; set; }
    }
	
// FavoriteFieldResponseDto
	public class FavoriteFieldResponseDto
    {
        public int FieldId { get; set; }
        public string FieldName { get; set; }
        public string SportType { get; set; }
        public string Location { get; set; }
        public string Phone { get; set; }
        public string OpenHours { get; set; }
        public string AddedDate { get; set; }
    }

// PaginatedResponse<T>
	public class PaginatedResponse<T>
    {
        public int TotalItems { get; set; }
        public int Page { get; set; }
        public int PageSize { get; set; }
        public IEnumerable<T> Items { get; set; }
    }
	
// UpdateProfileDto
	public class UpdateProfileDto
    {
        [Required(ErrorMessage = "Họ tên không được để trống")]
        [StringLength(100, ErrorMessage = "Họ tên không được vượt quá 100 ký tự")]
        public string FullName { get; set; }

        [Required(ErrorMessage = "Số điện thoại không được để trống")]
        [Phone(ErrorMessage = "Số điện thoại không hợp lệ")]
        [StringLength(10, ErrorMessage = "Số điện thoại không được vượt quá 10 ký tự")]
        public string Phone { get; set; }

        [Required(ErrorMessage = "Giới tính không được để trống")]
        [RegularExpression("^(Male|Female|Other)$", ErrorMessage = "Giới tính không hợp lệ")]
        public string Gender { get; set; }

        [DataType(DataType.Date)]
        public DateTime? DateOfBirth { get; set; }

        [Url(ErrorMessage = "URL avatar không hợp lệ")]
        public string AvatarUrl { get; set; }
    }
	
// UserProfileResponseDto
	public class UserProfileResponseDto
    {
        public string Email { get; set; }
        public string Role { get; set; }
        public string FullName { get; set; }
        public string Phone { get; set; }
        public string Gender { get; set; }
        public string DateOfBirth { get; set; }
        public string AvatarUrl { get; set; }
    }